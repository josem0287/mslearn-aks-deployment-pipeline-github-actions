name: Build and push the latest build to production

on:
  push:
    tags:
      - 'v*'

jobs:
  build_push_image:
    runs-on: ubuntu-latest

    steps:
    
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push production images
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.ACR_NAME }}/contoso-website:$VERSION
          docker push ${{ secrets.ACR_NAME }}/contoso-website:$VERSION
        env: 
          VERSION: ${{ steps.get_version.outputs.VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_push_image

    steps:
      - uses: actions/checkout@v2

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource group name
          resource-group: mslearn-gh-pipelines-7437
          # AKS cluster name
          cluster-name: contoso-video

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace production  \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.registry=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }} \
            --set image.tag=$VERSION
        env: 
          VERSION: ${{ steps.get_version.outputs.VERSION }}
